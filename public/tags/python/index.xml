<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Steve&#39;s Blog</title>
    <link>https://echowings.github.io/tags/python/</link>
    <description>Recent content in Python on Steve&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sun, 05 May 2024 14:18:08 +0800</lastBuildDate>
    <atom:link href="https://echowings.github.io/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to Create Synthetic Monitor With Pulumi Python</title>
      <link>https://echowings.github.io/p/how-to-create-synthetic-monitor-with-pulumi-python/</link>
      <pubDate>Sun, 17 Mar 2024 11:39:49 +0800</pubDate>
      <guid>https://echowings.github.io/p/how-to-create-synthetic-monitor-with-pulumi-python/</guid>
      <description>Prepared environment Install pulumi install python install poetry Create pulumi project Create pulumi project 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 ## create folder mkdir newrelic-pulumi-example &amp;amp;&amp;amp; cd newrelic-plumi-example # crate pulumi project without active python venv pulumi new python --name pulumi-newrelic-simple-mintor --stack dev --description &amp;#34;implement new relic sythetic simple monitoring&amp;#34; -y --generate-only --force ## Chang python virtual environment path sed -i &amp;#39;s/venv/.</description>
    </item>
    <item>
      <title>How to Depoy Flask App on Docker With Pulumi</title>
      <link>https://echowings.github.io/p/how-to-depoy-flask-app-on-docker-with-pulumi/</link>
      <pubDate>Wed, 13 Mar 2024 16:08:20 +0800</pubDate>
      <guid>https://echowings.github.io/p/how-to-depoy-flask-app-on-docker-with-pulumi/</guid>
      <description>Create flask app Create project directory 1 mkdir -p pulumi-docker/flask-first-steps/app create Dockerfile 1 2 3 4 tee pulumi-docker/flask-first-steps/Dockerfile &amp;lt;&amp;lt; &amp;#34;EOF&amp;#34; FROM tiangolo/uwsgi-nginx-flask:python3.8 COPY ./app /app EOF Create main.py 1 2 3 4 5 6 7 8 9 10 11 12 tee pulumi-docker/flask-first-steps/app/main.py &amp;lt;&amp;lt; &amp;#34;EOF&amp;#34; from flask import Flask app = Flask(__name__) @app.route(&amp;#39;/&amp;#39;) def hello_world(): return &amp;#39;Hello, World!&amp;#39; if __name__ == &amp;#34;__main__&amp;#34;: # Only for debugging while developing app.run(host=&amp;#39;0.0.0.0&amp;#39;, debug=True, port=80) EOF Option: Run app in docker 1 2 3 4 cd docker build -t myflaskservice .</description>
    </item>
    <item>
      <title>How to Send Email With Sendgrid Api</title>
      <link>https://echowings.github.io/p/how-to-send-email-with-sendgrid-api/</link>
      <pubDate>Thu, 07 Mar 2024 14:47:50 +0800</pubDate>
      <guid>https://echowings.github.io/p/how-to-send-email-with-sendgrid-api/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 import sendgrid #import os from sendgrid.helpers.mail import Mail, Email, To, Content #export SENDGRID_API_KEY=&amp;#34;API_KEY&amp;#34; #echo $SENDGRID_API_KEY SENDGRID_API_KEY=&amp;#34;API_KEY&amp;#34; print(SENDGRID_API_KEY) #sg = sendgrid.SendGridAPIClient(api_key=os.environ.get(SENDGRID_API_KEY)) sg = sendgrid.SendGridAPIClient(api_key=SENDGRID_API_KEY) from_email = Email(&amp;#34;sender@sender.com&amp;#34;) # Change to your verified sender to_email = To(&amp;#34;receiver@receiver.com&amp;#34;) # Change to your recipient subject = &amp;#34;Sending with SendGrid is Fun&amp;#34; content = Content(&amp;#34;text/plain&amp;#34;, &amp;#34;and easy to do anywhere, even with Python&amp;#34;) mail = Mail(from_email, to_email, subject, content) # Get a JSON-ready representation of the Mail object mail_json = mail.</description>
    </item>
    <item>
      <title>Learning Flask 01</title>
      <link>https://echowings.github.io/p/learning-flask-01/</link>
      <pubDate>Tue, 25 Dec 2018 06:11:03 +0800</pubDate>
      <guid>https://echowings.github.io/p/learning-flask-01/</guid>
      <description>learning Flask 01 Installation and configure of anaconda Installaltion homebrew 1 ruby -e &amp;#34;$ (curl - fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;#34; Installation of pyenv 1 2 # Installing pyenv brew install pyenv Install anaconda 2 and anaconda 3 Download anaconda from here </description>
    </item>
    <item>
      <title>Python Development 01</title>
      <link>https://echowings.github.io/p/python-development-01/</link>
      <pubDate>Thu, 29 Nov 2018 00:28:31 +0800</pubDate>
      <guid>https://echowings.github.io/p/python-development-01/</guid>
      <description>Python Development python开发笔记-01-python开发入门 安装ptyhon开发工具和包 安装ubuntu 16.04 &amp;hellip;pass&amp;hellip; 安装系统相关依赖包 build-essen</description>
    </item>
  </channel>
</rss>
