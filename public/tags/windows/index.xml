<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>windows on Steve&#39;s Blog</title>
    <link>https://echowings.github.io/tags/windows/</link>
    <description>Recent content in windows on Steve&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 22 Dec 2023 22:55:42 +0800</lastBuildDate><atom:link href="https://echowings.github.io/tags/windows/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to Generate Windows Reboot Task Scheduler</title>
      <link>https://echowings.github.io/p/how-to-generate-windows-reboot-task-scheduler/</link>
      <pubDate>Fri, 22 Dec 2023 22:55:42 +0800</pubDate>
      
      <guid>https://echowings.github.io/p/how-to-generate-windows-reboot-task-scheduler/</guid>
      <description>Powershell 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 #create-reboot-task-scheduler.ps1 $ErrorActionPreference = &amp;#39;Stop&amp;#39; # Define the trigger (every Sunday at 6:00 AM) $trigger = New-ScheduledTaskTrigger -Weekly -DaysOfWeek Sunday -At 6am # Define the action to be performed (in this case, a system restart) $action = New-ScheduledTaskAction -Execute &amp;#39;shutdown&amp;#39; -Argument &amp;#39;/r /f /t 0&amp;#39; # Register the task with the Task Scheduler Register-ScheduledTask -TaskName &amp;#34;RebootTask&amp;#34; ` -Action $action ` -Trigger $trigger ` -Settings (New-ScheduledTaskSettingsSet -AllowStartIfOnBatteries -DontStopIfGoingOnBatteries) ` -RunLevel Highest ` -User &amp;#34;NT AUTHORITY\SYSTEM&amp;#34; ` -Description &amp;#34;Reboot server every Sunday at 6am&amp;#34; # Get task to confirm it was created Get-ScheduledTask -TaskName &amp;#34;RebootTask&amp;#34; Ansible 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 --- - name: Create Reboot Server Scheduler at every 5:00AM Sunday ON WINDOWS SERVER hosts: &amp;#34;windows&amp;#34; gather_facts: no tasks: - name: Create scheduled task win_scheduled_task: name: Reboot_Task description: &amp;#34;Reboot every Sunday at 6:00 AM&amp;#34; actions: - path: &amp;#34;C:\\Windows\\System32\\shutdown.</description>
    </item>
    
    <item>
      <title>How to Uninstall Windows Update Which Install Failed</title>
      <link>https://echowings.github.io/p/how-to-uninstall-windows-update-which-install-failed/</link>
      <pubDate>Tue, 29 Dec 2020 11:50:20 +0800</pubDate>
      
      <guid>https://echowings.github.io/p/how-to-uninstall-windows-update-which-install-failed/</guid>
      <description>How to uninstlal windows update which install failed Uninstall failed windows update Reboot your pc or laptop and select troubleshoot Select to open the command prompt and stay away from any other auto repair options. Loading the software rigistry.
1 2 3 4 5 6 7 8 #Load the softeware registry hive as follows. reg load hklm/temp c:\windows\system32\config\software #Delete the sessionPending registry key, if it exists by running: reg delete &amp;#34;HKLM\temp\Microsoft\Windows\CurrentVersion\Component Based Servicing\SessionPending&amp;#34; /v Exclusive # Unload the software registry hive: reg unload HKLM\temp Remove failed updates with DISM command List failed updated.</description>
    </item>
    
    <item>
      <title>How to Setup Reverse Proxy With Iis</title>
      <link>https://echowings.github.io/p/how-to-setup-reverse-proxy-with-iis/</link>
      <pubDate>Tue, 06 Nov 2018 23:26:18 +0800</pubDate>
      
      <guid>https://echowings.github.io/p/how-to-setup-reverse-proxy-with-iis/</guid>
      <description>How to Setup Reverse proxy with IIS I testing it on Server 2016 with IIS 10 Install IIS,URL _REWRITE, ARR Install IIS. Download and install URL Rewrite Module 2.1 Download and install ARR-Application-request-routing Setting Reverse Proxy Select Root level in IIS management Click ‘Application Request Routing Cache’,then in the</description>
    </item>
    
  </channel>
</rss>
